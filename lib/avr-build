#!/usr/bin/env fish

# Wyznacz absolutnƒÖ ≈õcie≈ºkƒô do katalogu lib (gdzie jest ten skrypt)
set script_path (realpath (status filename))
set lib_dir (dirname "$script_path")

# Import wsp√≥lnych funkcji
source $lib_dir/common.fish

function print_help
    echo "U≈ºycie: "(basename (status filename))" <host> <plik.c> [opcje]"
    echo
    echo "Orkiestrator - kompiluje kod AVR i wgrywa na RPi w jednym kroku."
    echo "Wywo≈Çuje kolejno: lib/compile.fish, nastƒôpnie lib/upload.fish"
    echo
    echo "Argumenty:"
    echo "  <host>     docelowy host SSH (np. rpi_local)"
    echo "  <plik.c>   pe≈Çna nazwa pliku ≈∫r√≥d≈Çowego (np. main.c lub projects/main.c)"
    echo
    echo "Opcje:"
    echo "  --restart  zrestartuj mikrokontroler po flashu"
    echo "  --size     poka≈º rozmiar sekcji podczas kompilacji"
    echo "  --trace    w≈ÇƒÖcz szczeg√≥≈Çowe ≈õledzenie"
    echo "  -h, --help poka≈º pomoc"
    echo
    echo "Przyk≈Çady:"
    echo "  "(basename (status filename))" rpi_local main.c"
    echo "  "(basename (status filename))" rpi_local projects/main.c --size --restart"
    echo "  "(basename (status filename))" rpi_local ../other-project/code.c"
    echo
    echo "Skrypt mo≈ºe byƒá uruchamiany z dowolnego katalogu."
end

# Parsowanie argument√≥w
set -l host ""
set -l source_file ""
set -l restart_flag 0
set -l size_flag 0
set -l trace_flag 0

set -l positional_count 0
for arg in $argv
    switch $arg
        case -h --help
            print_help
            exit 0
        case --restart
            set restart_flag 1
        case --size
            set size_flag 1
        case --trace
            set trace_flag 1
        case '*'
            set positional_count (math $positional_count + 1)
            if test $positional_count -eq 1
                set host $arg
            else if test $positional_count -eq 2
                set source_file $arg
            end
    end
end

if test -z "$host" -o -z "$source_file"
    error "Brak wymaganych argument√≥w!"
    print_help
    exit 1
end

# Konwertuj ≈õcie≈ºkƒô pliku ≈∫r√≥d≈Çowego na absolutnƒÖ
set source_file (realpath "$source_file")

# WyciƒÖgnij katalog i nazwƒô bazowƒÖ dla ≈õcie≈ºki HEX
set -l source_dir (dirname "$source_file")
set -l basename_file (basename (string replace -r '\.c$' '' "$source_file"))
set -l hex_file "$source_dir/target/$basename_file.hex"

info "üöÄ Rozpoczynanie kompilacji i wgrywania"
info "Plik ≈∫r√≥d≈Çowy: $source_file"
info "Host docelowy: $host"
info "Katalog roboczy: "(pwd)

# KROK 1: Kompilacja
info (separator)
info "KROK 1/2: Kompilacja"  
info (separator)

set -l compile_args "$source_file"
if test $size_flag -eq 1
    set compile_args $compile_args --size
end
if test $trace_flag -eq 1
    set compile_args $compile_args --trace
end

# Sprawd≈∫ czy skrypt lib/compile.fish istnieje
if not test -f "$lib_dir/compile.fish"
    error "Brak pliku $lib_dir/compile.fish!"
    exit 1
end

fish $lib_dir/compile.fish $compile_args
set -l compile_result $status

if test $compile_result -ne 0
    error "‚ùå Kompilacja nie powiod≈Ça siƒô!"
    exit $compile_result
end

# KROK 2: Wgrywanie
info (separator)
info "KROK 2/2: Wgrywanie"
info (separator)

set -l upload_args $host "$hex_file"
if test $restart_flag -eq 1
    set upload_args $upload_args --restart
end
if test $trace_flag -eq 1
    set upload_args $upload_args --trace
end

# Sprawd≈∫ czy skrypt lib/upload.fish istnieje
if not test -f "$lib_dir/upload.fish"
    error "Brak pliku $lib_dir/upload.fish!"
    exit 1
end

fish $lib_dir/upload.fish $upload_args
set -l upload_result $status

if test $upload_result -ne 0
    error "‚ùå Wgrywanie nie powiod≈Ço siƒô!"
    exit $upload_result
end

info "üéâ Wszystko zako≈Ñczone pomy≈õlnie!"
info "Plik $source_file zosta≈Ç skompilowany i wgrany na $host"
